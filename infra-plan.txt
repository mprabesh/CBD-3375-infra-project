
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.backend_vm.azurerm_linux_virtual_machine.this will be created
  + resource "azurerm_linux_virtual_machine" "this" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "azureuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "backend-vm"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "example-resources"
      + size                                                   = "Standard_B1s"
      + tags                                                   = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
          + "Role"        = "BackendServer"
        }
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = (known after apply)

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = "backend-vm-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # module.database_vm.azurerm_linux_virtual_machine.this will be created
  + resource "azurerm_linux_virtual_machine" "this" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "azureuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "database-vm"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "example-resources"
      + size                                                   = "Standard_B1s"
      + tags                                                   = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
          + "Role"        = "DatabaseServer"
        }
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = (known after apply)

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = "database-vm-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # module.networking.azurerm_nat_gateway.this will be created
  + resource "azurerm_nat_gateway" "this" {
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 10
      + location                = "eastus"
      + name                    = "example-vnet-nat-gateway"
      + resource_group_name     = "example-resources"
      + resource_guid           = (known after apply)
      + sku_name                = "Standard"
      + tags                    = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.networking.azurerm_nat_gateway_public_ip_association.this will be created
  + resource "azurerm_nat_gateway_public_ip_association" "this" {
      + id                   = (known after apply)
      + nat_gateway_id       = (known after apply)
      + public_ip_address_id = (known after apply)
    }

  # module.networking.azurerm_network_interface.backend_vm will be created
  + resource "azurerm_network_interface" "backend_vm" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "backend-vm-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "example-resources"
      + tags                           = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # module.networking.azurerm_network_interface.database_vm will be created
  + resource "azurerm_network_interface" "database_vm" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "database-vm-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "example-resources"
      + tags                           = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # module.networking.azurerm_network_interface.web_vm will be created
  + resource "azurerm_network_interface" "web_vm" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "web-vm-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "example-resources"
      + tags                           = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # module.networking.azurerm_network_security_group.private will be created
  + resource "azurerm_network_security_group" "private" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "example-vnet-private-nsg"
      + resource_group_name = "example-resources"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_ranges                    = [
                  + "27017",
                  + "3306",
                  + "5432",
                ]
              + direction                                  = "Inbound"
              + name                                       = "Database-internal"
              + priority                                   = 1004
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "10.0.2.0/24"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (2 unchanged attributes hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH-from-public"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "10.0.1.0/24"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "3000"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "API-from-public"
              + priority                                   = 1003
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "10.0.1.0/24"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "HTTP-from-public"
              + priority                                   = 1002
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "10.0.1.0/24"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
      + tags                = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.networking.azurerm_network_security_group.public will be created
  + resource "azurerm_network_security_group" "public" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "example-vnet-public-nsg"
      + resource_group_name = "example-resources"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1003
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "443"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "HTTPS"
              + priority                                   = 1002
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "HTTP"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
      + tags                = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.networking.azurerm_public_ip.nat_gateway will be created
  + resource "azurerm_public_ip" "nat_gateway" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "example-vnet-nat-gateway-ip"
      + resource_group_name     = "example-resources"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
      + tags                    = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.networking.azurerm_public_ip.web_vm will be created
  + resource "azurerm_public_ip" "web_vm" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "web-vm-public-ip"
      + resource_group_name     = "example-resources"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
      + tags                    = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.networking.azurerm_subnet.private will be created
  + resource "azurerm_subnet" "private" {
      + address_prefixes                              = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "private-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "example-resources"
      + virtual_network_name                          = "example-vnet"
    }

  # module.networking.azurerm_subnet.public will be created
  + resource "azurerm_subnet" "public" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "public-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "example-resources"
      + virtual_network_name                          = "example-vnet"
    }

  # module.networking.azurerm_subnet_nat_gateway_association.private will be created
  + resource "azurerm_subnet_nat_gateway_association" "private" {
      + id             = (known after apply)
      + nat_gateway_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.azurerm_subnet_network_security_group_association.private will be created
  + resource "azurerm_subnet_network_security_group_association" "private" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.networking.azurerm_subnet_network_security_group_association.public will be created
  + resource "azurerm_subnet_network_security_group_association" "public" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.networking.azurerm_virtual_network.this will be created
  + resource "azurerm_virtual_network" "this" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "eastus"
      + name                           = "example-vnet"
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "example-resources"
      + subnet                         = (known after apply)
      + tags                           = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.resource_group.azurerm_resource_group.this will be created
  + resource "azurerm_resource_group" "this" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "example-resources"
      + tags     = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
        }
    }

  # module.web_vm.azurerm_linux_virtual_machine.this will be created
  + resource "azurerm_linux_virtual_machine" "this" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "azureuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "web-vm"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "example-resources"
      + size                                                   = "Standard_B1s"
      + tags                                                   = {
          + "Environment" = "dev"
          + "Owner"       = "mprabesh"
          + "Project"     = "Example"
          + "Role"        = "WebServer"
        }
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = (known after apply)

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = "web-vm-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

Plan: 19 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + backend_vm_name                 = "backend-vm"
  + backend_vm_private_ip           = (known after apply)
  + database_vm_name                = "database-vm"
  + database_vm_private_ip          = (known after apply)
  + nat_gateway_public_ip           = (known after apply)
  + private_nsg_name                = "example-vnet-private-nsg"
  + private_subnet_address_prefixes = [
      + "10.0.2.0/24",
    ]
  + private_subnet_name             = "private-subnet"
  + public_nsg_name                 = "example-vnet-public-nsg"
  + public_subnet_address_prefixes  = [
      + "10.0.1.0/24",
    ]
  + public_subnet_name              = "public-subnet"
  + resource_group_location         = "eastus"
  + resource_group_name             = "example-resources"
  + vm_admin_username               = "azureuser"
  + vnet_address_space              = [
      + "10.0.0.0/16",
    ]
  + vnet_name                       = "example-vnet"
  + web_vm_name                     = "web-vm"
  + web_vm_private_ip               = (known after apply)
  + web_vm_public_ip                = (known after apply)

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
