
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.networking.azurerm_network_interface.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "this" {
      [32m+[0m[0m accelerated_networking_enabled = false
      [32m+[0m[0m applied_dns_servers            = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix    = (known after apply)
      [32m+[0m[0m ip_forwarding_enabled          = false
      [32m+[0m[0m location                       = "eastus"
      [32m+[0m[0m mac_address                    = (known after apply)
      [32m+[0m[0m name                           = "example-nic"
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m private_ip_addresses           = (known after apply)
      [32m+[0m[0m resource_group_name            = "example-resources"
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Owner"       = "mprabesh"
          [32m+[0m[0m "Project"     = "Example"
        }
      [32m+[0m[0m virtual_machine_id             = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "internal"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m public_ip_address_id                               = (known after apply)
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # module.networking.azurerm_public_ip.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "this" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "eastus"
      [32m+[0m[0m name                    = "example-public-ip"
      [32m+[0m[0m resource_group_name     = "example-resources"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Owner"       = "mprabesh"
          [32m+[0m[0m "Project"     = "Example"
        }
    }

[1m  # module.networking.azurerm_subnet.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "this" {
      [32m+[0m[0m address_prefixes                              = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled               = true
      [32m+[0m[0m id                                            = (known after apply)
      [32m+[0m[0m name                                          = "example-subnet"
      [32m+[0m[0m private_endpoint_network_policies             = "Disabled"
      [32m+[0m[0m private_link_service_network_policies_enabled = true
      [32m+[0m[0m resource_group_name                           = "example-resources"
      [32m+[0m[0m virtual_network_name                          = "example-vnet"
    }

[1m  # module.networking.azurerm_virtual_network.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "this" {
      [32m+[0m[0m address_space                  = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers                    = (known after apply)
      [32m+[0m[0m guid                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m location                       = "eastus"
      [32m+[0m[0m name                           = "example-vnet"
      [32m+[0m[0m private_endpoint_vnet_policies = "Disabled"
      [32m+[0m[0m resource_group_name            = "example-resources"
      [32m+[0m[0m subnet                         = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Owner"       = "mprabesh"
          [32m+[0m[0m "Project"     = "Example"
        }
    }

[1m  # module.resource_group.azurerm_resource_group.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "this" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "eastus"
      [32m+[0m[0m name     = "example-resources"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Owner"       = "mprabesh"
          [32m+[0m[0m "Project"     = "Example"
        }
    }

[1m  # module.virtual_machine.azurerm_linux_virtual_machine.this[0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "this" {
      [32m+[0m[0m admin_password                                         = (sensitive value)
      [32m+[0m[0m admin_username                                         = "azureuser"
      [32m+[0m[0m allow_extension_operations                             = true
      [32m+[0m[0m bypass_platform_safety_checks_on_user_schedule_enabled = false
      [32m+[0m[0m computer_name                                          = (known after apply)
      [32m+[0m[0m disable_password_authentication                        = false
      [32m+[0m[0m disk_controller_type                                   = (known after apply)
      [32m+[0m[0m extensions_time_budget                                 = "PT1H30M"
      [32m+[0m[0m id                                                     = (known after apply)
      [32m+[0m[0m location                                               = "eastus"
      [32m+[0m[0m max_bid_price                                          = -1
      [32m+[0m[0m name                                                   = "example-vm"
      [32m+[0m[0m network_interface_ids                                  = (known after apply)
      [32m+[0m[0m patch_assessment_mode                                  = "ImageDefault"
      [32m+[0m[0m patch_mode                                             = "ImageDefault"
      [32m+[0m[0m platform_fault_domain                                  = -1
      [32m+[0m[0m priority                                               = "Regular"
      [32m+[0m[0m private_ip_address                                     = (known after apply)
      [32m+[0m[0m private_ip_addresses                                   = (known after apply)
      [32m+[0m[0m provision_vm_agent                                     = true
      [32m+[0m[0m public_ip_address                                      = (known after apply)
      [32m+[0m[0m public_ip_addresses                                    = (known after apply)
      [32m+[0m[0m resource_group_name                                    = "example-resources"
      [32m+[0m[0m size                                                   = "Standard_B1s"
      [32m+[0m[0m tags                                                   = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Owner"       = "mprabesh"
          [32m+[0m[0m "Project"     = "Example"
        }
      [32m+[0m[0m virtual_machine_id                                     = (known after apply)
      [32m+[0m[0m vm_agent_platform_updates_enabled                      = (known after apply)

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m id                        = (known after apply)
          [32m+[0m[0m name                      = "example-osdisk"
          [32m+[0m[0m storage_account_type      = "Standard_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m source_image_reference {
          [32m+[0m[0m offer     = "0001-com-ubuntu-server-focal"
          [32m+[0m[0m publisher = "Canonical"
          [32m+[0m[0m sku       = "20_04-lts"
          [32m+[0m[0m version   = "latest"
        }

      [32m+[0m[0m termination_notification (known after apply)
    }

[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m network_interface_id    = (known after apply)
  [32m+[0m[0m resource_group_location = "eastus"
  [32m+[0m[0m resource_group_name     = "example-resources"
  [32m+[0m[0m subnet_address_prefixes = [
      [32m+[0m[0m "10.0.1.0/24",
    ]
  [32m+[0m[0m subnet_name             = "example-subnet"
  [32m+[0m[0m vm_admin_username       = "azureuser"
  [32m+[0m[0m vm_name                 = "example-vm"
  [32m+[0m[0m vm_private_ip           = (known after apply)
  [32m+[0m[0m vm_public_ip            = (known after apply)
  [32m+[0m[0m vnet_address_space      = [
      [32m+[0m[0m "10.0.0.0/16",
    ]
  [32m+[0m[0m vnet_name               = "example-vnet"
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
